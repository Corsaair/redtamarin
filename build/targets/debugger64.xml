<project name="redtamarin-compile-debugger64">

	<target name="before">

		<if>
			<and>
			<equals arg1="${build.cleanGenerated}" arg2="true"/>
			<available file="${target.debugger64.path}" type="dir"/>
			</and>
			<then>
				<delete dir="${target.debugger64.path}"/>
			</then>
		</if>
		
		<!-- create objdir compilation folder if not found -->
		<if>
			<not>
			<available file="${target.debugger64.path}" type="dir"/>
			</not>
			<then>
				<mkdir dir="${target.debugger64.path}"/>
			</then>
		</if>

		<!-- make file flags -->
    	<var name="flags" value="--target=x86_64-${TARGET_OS}" />
    	<var name="flags" value="${flags} --enable-debug" />
    	<var name="flags" value="${flags} --enable-debugger" />

        <if>
            <equals arg1="${build.showoptions}" arg2="true"/>
        <then>
            <echo message="debugger64 flags:"/>
            <!-- <echo message="${commandline}"/> -->
            <for list="${flags}" delimiter=" " param = "flag">
                <sequential>
                <echo message = "@{flag}"/>
                </sequential>
            </for>

        </then>
        </if>
        <var name="commandline" value="${commandline} ${flags}" />

		<!-- generate make file if not found -->
		<if>
			<not>
			<available file="${target.debugger64.path}/Makefile" type="file"/>
		</not>
			<then>
		        <exec executable="python" dir="${target.debugger64.path}" failonerror="true">
		            <arg line="${commandline}"/>
		        </exec>
			</then>
		</if>

	</target>

	<target name="compile-debugger64" depends="before,compile,after">
	</target>

	<target name="compile">
       	
       	<if>
            <equals arg1="${build.cleanGenerated}" arg2="true"/>
        <then>
	        
			<delete>
				<fileset dir="${basedir}/src/generated" includes="**/*.h"/>
				<fileset dir="${basedir}/src/generated" includes="**/*.hh"/>
				<fileset dir="${basedir}/src/generated" includes="**/*.cpp"/>
			</delete>

			<exec executable="make" dir="${target.debugger64.path}" failonerror="true">
				<env key="ASC" value="${basedir}/${ASC1}"/>
				<env key="AVM" value="${basedir}/${AVMSHELL_EXE}"/>
				<env key="AVMSHELL_TOOL" value="${basedir}/${AVMSHELL_EXE}"/>
			</exec>

        </then>
        <else>
        	<exec executable="make" dir="${target.debugger64.path}" failonerror="true" />
        </else>
        </if>

	</target>

	<target name="after">

		<!-- create output folder if not found -->
		<if>
			<not>
			<available file="${app.release}/${TARGET_OS}/${target.debugger64.output}" type="dir"/>
			</not>
			<then>
				<mkdir dir="${app.release}/${TARGET_OS}/${target.debugger64.output}"/>
			</then>
		</if>

		<!-- move and rename avmshell -->
		<copy file="${target.debugger64.path}/shell/${AVMSHELL}" tofile="${app.release}/${TARGET_OS}/${target.debugger64.output}/${TARGET_DD}"/>

		<!-- executable bit -->
		<chmod file="${app.release}/${TARGET_OS}/${target.debugger64.output}/${TARGET_DD}" perm="+x"/>

	</target>

</project>