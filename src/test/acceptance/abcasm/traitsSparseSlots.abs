/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */



method_info
{
name:foo
	return_type:int
	//param_count:2
	//param_type:{int, int}
	
}

method_body_info {
	method: foo
	max_stack:3 local_count:3 init_scope_depth:1 max_scope_depth:2 
	code:
	{
		getlocal0
		pushscope
//		findpropstrict      {package,private}::print
		getglobalscope
		getslot             1  //  NOTE: lexical scoping!
//		callpropvoid        {package,private}::print 1
		returnvoid
	}

}

/*
Equivalent syntactic sugar for the above traits:
var x:String
var one:int = 1
var foo
*/

function main():*      
{
	getlocal0
	pushscope
	getglobalscope
	debugfile "zuul"
	newfunction         foo
	setslot             3
	pushstring          "hello, x-land"
	getglobalscope
	swap
	setslot             1
	debugline 9
	findpropstrict      foo
	getlocal0
	callproperty        foo 1
	coerce_a
	returnvalue
}


/*
 *  Test trait definitions, function lookup by name,
 *  explicit function-level metadata
 */
script_info
{
	init : main
	//  trait_count accumulated and set by the assembler, 
	//  can also be specified
	traits: {
	trait{ kind:Trait_Slot name:x slot_id:1 type_name:String}
	trait { kind:Trait_Slot name:poot type_name:String slot_id:1}
	trait{ kind:Trait_Slot name:foo slot_id:3 type_name:*}
	}
}

