/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

method_info { 
	name: runTest 
//	flags: SETS_DXNS
}
method_body_info {

	method: runTest

/*	traits: {
		trait { kind: Trait_Slot name: var1 }
	}
	*/
	code:
	{
		getlocal0
		pushscope

		findproperty COMPARE_STRICTEQ
	pushstring "equals int and uint"
		pushtrue // expected
		pushint 7
		pushuint 7
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals int and double"
		pushtrue // expected
		pushint 7
		pushdouble 7.
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals int and string"
		pushtrue // expected
		pushint 7
		pushstring "7"
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals (not) int and string"
		pushfalse // expected
		pushint 7
		pushstring "7.9."
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals (not) double and Nan"
		pushfalse // expected
		pushdouble 97.9
		pushnan
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals (not) Nan and double"
		pushfalse // expected
		pushnan
		pushdouble 97.9
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals (not) NaN and NaN"
		pushfalse // expected
		pushnan
		pushnan
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals null and undefined"
		pushtrue // expected
		pushnull
		pushundefined
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "equals undefined and null "
		pushtrue // expected
		pushundefined
		pushnull
		equals
		callpropvoid COMPARE_STRICTEQ 3

		/*
		findproperty COMPARE_STRICTEQ
	pushstring "equals +0 and -0"
		pushtrue // expected
		pushint 0
		pushint -0 //  FIXME: not really -0 in the ABC
		equals
		callpropvoid COMPARE_STRICTEQ 3
		*/

		findproperty COMPARE_STRICTEQ
	pushstring "Compare same Object"
		pushtrue // expected
		findproperty Object
		constructprop Object 0
		dup
		dup
		setlocal1
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "Compare different Objects"
		pushfalse // expected
		findproperty Object
		constructprop Object 0
		getlocal1
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "Compare Strings"
		pushtrue // expected
		pushstring "abcd"
		pushstring "ab"
		pushstring "cd"
		add
		equals
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "Compare (not) Strings"
		pushfalse // expected
		pushstring "abcd"
		pushstring "ab"
		pushstring "cd "
		add
		equals
		callpropvoid COMPARE_STRICTEQ 3
/* not implemented
		findproperty COMPARE_STRICTEQ
	pushstring "esc_xattr"
		pushstring "7" // expected
		pushint 7
		esc_xattr
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "esc_xattr"
		// TODO: assembler limitation
		// pushstring "&amp;\&quot;" // expected
		// pushstring "&\""
		pushstring "&amp;" // expected
		pushstring "&"
		esc_xattr
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "esc_xelem"
		pushstring "7" // expected
		pushint 7
		esc_xelem
		callpropvoid COMPARE_STRICTEQ 3

		findproperty COMPARE_STRICTEQ
	pushstring "esc_xelem"
		pushstring "&lt;foo&gt;" // expected
		pushstring "<foo>"
		esc_xelem
		callpropvoid COMPARE_STRICTEQ 3
*/




		returnvoid
	}
}

function main() {
	getlocal0
	pushscope
	findproperty START 
	pushstring "Instructions that start with the letter D" 
	callpropvoid START 1
	newfunction runTest
	getlocal0
	call 0
	findproperty END
	callpropvoid END 0
	returnvoid
}
script_info{init: main 
	traits: {
		trait { kind: Trait_Slot name: var1 }
	}
	}
