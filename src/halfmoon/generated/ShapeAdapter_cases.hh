///
/// generated by templates.py -- do not edit
///

case GOTOINSTR_SHAPE: 
  return a->do_GotoInstr(cast<GotoInstr>(instr));
case ARMINSTR_SHAPE: 
  return a->do_ArmInstr(cast<ArmInstr>(instr));
case CATCHBLOCKINSTR_SHAPE: 
  return a->do_CatchBlockInstr(cast<CatchBlockInstr>(instr));
case LABELINSTR_SHAPE: 
  return a->do_LabelInstr(cast<LabelInstr>(instr));
case CONSTANTEXPR_SHAPE: 
  return a->do_ConstantExpr(cast<ConstantExpr>(instr));
case STARTINSTR_SHAPE: 
  return a->do_StartInstr(cast<StartInstr>(instr));
case IFINSTR_SHAPE: 
  return a->do_IfInstr(cast<IfInstr>(instr));
case SWITCHINSTR_SHAPE: 
  return a->do_SwitchInstr(cast<SwitchInstr>(instr));
case UNARYEXPR_SHAPE: 
  return a->do_UnaryExpr(cast<UnaryExpr>(instr));
case BINARYEXPR_SHAPE: 
  return a->do_BinaryExpr(cast<BinaryExpr>(instr));
case SETLOCALINSTR_SHAPE: 
  return a->do_SetlocalInstr(cast<SetlocalInstr>(instr));
case STOPINSTR_SHAPE: 
  return a->do_StopInstr(cast<StopInstr>(instr));
case DEOPTSAFEPOINTINSTR_SHAPE: 
  return a->do_DeoptSafepointInstr(cast<DeoptSafepointInstr>(instr));
case DEOPTFINISHINSTR_SHAPE: 
  return a->do_DeoptFinishInstr(cast<DeoptFinishInstr>(instr));
case VOIDSTMT_SHAPE: 
  return a->do_VoidStmt(cast<VoidStmt>(instr));
case NARYSTMT0_SHAPE: 
  return a->do_NaryStmt0(cast<NaryStmt0>(instr));
case SAFEPOINTINSTR_SHAPE: 
  return a->do_SafepointInstr(cast<SafepointInstr>(instr));
case DEBUGINSTR_SHAPE: 
  return a->do_DebugInstr(cast<DebugInstr>(instr));
case DEOPTFINISHCALLINSTR_SHAPE: 
  return a->do_DeoptFinishCallInstr(cast<DeoptFinishCallInstr>(instr));
case NARYSTMT1_SHAPE: 
  return a->do_NaryStmt1(cast<NaryStmt1>(instr));
case UNARYSTMT_SHAPE: 
  return a->do_UnaryStmt(cast<UnaryStmt>(instr));
case CALLSTMT2_SHAPE: 
  return a->do_CallStmt2(cast<CallStmt2>(instr));
case NARYSTMT2_SHAPE: 
  return a->do_NaryStmt2(cast<NaryStmt2>(instr));
case BINARYSTMT_SHAPE: 
  return a->do_BinaryStmt(cast<BinaryStmt>(instr));
case HASNEXT2STMT_SHAPE: 
  return a->do_Hasnext2Stmt(cast<Hasnext2Stmt>(instr));
case CALLSTMT3_SHAPE: 
  return a->do_CallStmt3(cast<CallStmt3>(instr));
case NARYSTMT3_SHAPE: 
  return a->do_NaryStmt3(cast<NaryStmt3>(instr));
case CALLSTMT4_SHAPE: 
  return a->do_CallStmt4(cast<CallStmt4>(instr));
case NARYSTMT4_SHAPE: 
  return a->do_NaryStmt4(cast<NaryStmt4>(instr));
