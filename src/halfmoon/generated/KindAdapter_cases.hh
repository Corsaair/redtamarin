///
/// generated by templates.py -- do not edit
///

case HR_start: 
  return a->do_start(cast<StartInstr>(instr));
case HR_template: 
  return a->do_template(cast<StartInstr>(instr));
case HR_catchblock: 
  return a->do_catchblock(cast<CatchBlockInstr>(instr));
case HR_return: 
  return a->do_return(cast<StopInstr>(instr));
case HR_throw: 
  return a->do_throw(cast<StopInstr>(instr));
case HR_goto: 
  return a->do_goto(cast<GotoInstr>(instr));
case HR_label: 
  return a->do_label(cast<LabelInstr>(instr));
case HR_if: 
  return a->do_if(cast<IfInstr>(instr));
case HR_switch: 
  return a->do_switch(cast<SwitchInstr>(instr));
case HR_arm: 
  return a->do_arm(cast<ArmInstr>(instr));
case HR_const: 
  return a->do_const(cast<ConstantExpr>(instr));
case HR_coerce: 
  return a->do_coerce(cast<BinaryStmt>(instr));
case HR_cast: 
  return a->do_cast(cast<BinaryStmt>(instr));
case HR_castobject: 
  return a->do_castobject(cast<UnaryExpr>(instr));
case HR_tonumber: 
  return a->do_tonumber(cast<UnaryStmt>(instr));
case HR_toint: 
  return a->do_toint(cast<UnaryStmt>(instr));
case HR_touint: 
  return a->do_touint(cast<UnaryStmt>(instr));
case HR_toboolean: 
  return a->do_toboolean(cast<UnaryExpr>(instr));
case HR_d2b: 
  return a->do_d2b(cast<UnaryExpr>(instr));
case HR_caststring: 
  return a->do_caststring(cast<UnaryStmt>(instr));
case HR_castns: 
  return a->do_castns(cast<UnaryStmt>(instr));
case HR_cknull: 
  return a->do_cknull(cast<UnaryStmt>(instr));
case HR_cknullobject: 
  return a->do_cknullobject(cast<UnaryStmt>(instr));
case HR_cktimeout: 
  return a->do_cktimeout(cast<UnaryStmt>(instr));
case HR_abc_hasnext: 
  return a->do_abc_hasnext(cast<BinaryStmt>(instr));
case HR_abc_hasnext2: 
  return a->do_abc_hasnext2(cast<Hasnext2Stmt>(instr));
case HR_never: 
  return a->do_never(cast<ConstantExpr>(instr));
case HR_call: 
  return a->do_call(cast<CallStmt2>(instr));
case HR_construct: 
  return a->do_construct(cast<CallStmt2>(instr));
case HR_constructsuper: 
  return a->do_constructsuper(cast<CallStmt2>(instr));
case HR_loadenv_namespace: 
  return a->do_loadenv_namespace(cast<BinaryExpr>(instr));
case HR_loadenv_boolean: 
  return a->do_loadenv_boolean(cast<BinaryExpr>(instr));
case HR_loadenv_number: 
  return a->do_loadenv_number(cast<BinaryExpr>(instr));
case HR_loadenv_string: 
  return a->do_loadenv_string(cast<BinaryExpr>(instr));
case HR_loadenv_interface: 
  return a->do_loadenv_interface(cast<BinaryExpr>(instr));
case HR_loadenv: 
  return a->do_loadenv(cast<BinaryExpr>(instr));
case HR_loadenv_atom: 
  return a->do_loadenv_atom(cast<BinaryExpr>(instr));
case HR_loadinitenv: 
  return a->do_loadinitenv(cast<UnaryExpr>(instr));
case HR_loadsuperinitenv: 
  return a->do_loadsuperinitenv(cast<UnaryExpr>(instr));
case HR_loadenv_env: 
  return a->do_loadenv_env(cast<BinaryExpr>(instr));
case HR_newobject: 
  return a->do_newobject(cast<NaryStmt0>(instr));
case HR_newarray: 
  return a->do_newarray(cast<NaryStmt0>(instr));
case HR_applytype: 
  return a->do_applytype(cast<NaryStmt0>(instr));
case HR_newinstance: 
  return a->do_newinstance(cast<UnaryExpr>(instr));
case HR_abc_convert_s: 
  return a->do_abc_convert_s(cast<UnaryStmt>(instr));
case HR_abc_esc_xelem: 
  return a->do_abc_esc_xelem(cast<UnaryStmt>(instr));
case HR_abc_esc_xattr: 
  return a->do_abc_esc_xattr(cast<UnaryStmt>(instr));
case HR_abc_typeof: 
  return a->do_abc_typeof(cast<UnaryExpr>(instr));
case HR_speculate_int: 
  return a->do_speculate_int(cast<BinaryExpr>(instr));
case HR_speculate_number: 
  return a->do_speculate_number(cast<BinaryExpr>(instr));
case HR_speculate_numeric: 
  return a->do_speculate_numeric(cast<BinaryExpr>(instr));
case HR_speculate_string: 
  return a->do_speculate_string(cast<BinaryExpr>(instr));
case HR_speculate_object: 
  return a->do_speculate_object(cast<BinaryExpr>(instr));
case HR_speculate_array: 
  return a->do_speculate_array(cast<BinaryExpr>(instr));
case HR_speculate_bool: 
  return a->do_speculate_bool(cast<BinaryExpr>(instr));
case HR_ckfilter: 
  return a->do_ckfilter(cast<UnaryExpr>(instr));
case HR_abc_add: 
  return a->do_abc_add(cast<BinaryStmt>(instr));
case HR_addd: 
  return a->do_addd(cast<BinaryExpr>(instr));
case HR_concat_strings: 
  return a->do_concat_strings(cast<BinaryExpr>(instr));
case HR_abc_nextname: 
  return a->do_abc_nextname(cast<BinaryStmt>(instr));
case HR_abc_nextvalue: 
  return a->do_abc_nextvalue(cast<BinaryStmt>(instr));
case HR_lessthan: 
  return a->do_lessthan(cast<BinaryExpr>(instr));
case HR_lessequals: 
  return a->do_lessequals(cast<BinaryExpr>(instr));
case HR_greaterthan: 
  return a->do_greaterthan(cast<BinaryExpr>(instr));
case HR_greaterequals: 
  return a->do_greaterequals(cast<BinaryExpr>(instr));
case HR_abc_instanceof: 
  return a->do_abc_instanceof(cast<BinaryStmt>(instr));
case HR_abc_istype: 
  return a->do_abc_istype(cast<BinaryStmt>(instr));
case HR_abc_istypelate: 
  return a->do_abc_istypelate(cast<BinaryStmt>(instr));
case HR_abc_astype: 
  return a->do_abc_astype(cast<BinaryExpr>(instr));
case HR_abc_astypelate: 
  return a->do_abc_astypelate(cast<BinaryStmt>(instr));
case HR_abc_in: 
  return a->do_abc_in(cast<BinaryStmt>(instr));
case HR_divd: 
  return a->do_divd(cast<BinaryExpr>(instr));
case HR_modulo: 
  return a->do_modulo(cast<BinaryExpr>(instr));
case HR_subd: 
  return a->do_subd(cast<BinaryExpr>(instr));
case HR_muld: 
  return a->do_muld(cast<BinaryExpr>(instr));
case HR_addi: 
  return a->do_addi(cast<BinaryExpr>(instr));
case HR_subi: 
  return a->do_subi(cast<BinaryExpr>(instr));
case HR_muli: 
  return a->do_muli(cast<BinaryExpr>(instr));
case HR_ori: 
  return a->do_ori(cast<BinaryExpr>(instr));
case HR_andi: 
  return a->do_andi(cast<BinaryExpr>(instr));
case HR_xori: 
  return a->do_xori(cast<BinaryExpr>(instr));
case HR_lshi: 
  return a->do_lshi(cast<BinaryExpr>(instr));
case HR_rshi: 
  return a->do_rshi(cast<BinaryExpr>(instr));
case HR_rshui: 
  return a->do_rshui(cast<BinaryExpr>(instr));
case HR_noti: 
  return a->do_noti(cast<UnaryExpr>(instr));
case HR_negi: 
  return a->do_negi(cast<UnaryExpr>(instr));
case HR_negd: 
  return a->do_negd(cast<UnaryExpr>(instr));
case HR_not: 
  return a->do_not(cast<UnaryExpr>(instr));
case HR_newactivation: 
  return a->do_newactivation(cast<UnaryStmt>(instr));
case HR_abc_finddef: 
  return a->do_abc_finddef(cast<BinaryStmt>(instr));
case HR_abc_findpropstrict: 
  return a->do_abc_findpropstrict(cast<NaryStmt3>(instr));
case HR_abc_findpropstrictx: 
  return a->do_abc_findpropstrictx(cast<NaryStmt4>(instr));
case HR_abc_findpropstrictns: 
  return a->do_abc_findpropstrictns(cast<NaryStmt4>(instr));
case HR_abc_findpropstrictnsx: 
  return a->do_abc_findpropstrictnsx(cast<NaryStmt4>(instr));
case HR_abc_findproperty: 
  return a->do_abc_findproperty(cast<NaryStmt3>(instr));
case HR_abc_findpropertyx: 
  return a->do_abc_findpropertyx(cast<NaryStmt4>(instr));
case HR_abc_findpropertyns: 
  return a->do_abc_findpropertyns(cast<NaryStmt4>(instr));
case HR_abc_findpropertynsx: 
  return a->do_abc_findpropertynsx(cast<NaryStmt4>(instr));
case HR_newclass: 
  return a->do_newclass(cast<NaryStmt2>(instr));
case HR_newfunction: 
  return a->do_newfunction(cast<NaryStmt1>(instr));
case HR_abc_getsuper: 
  return a->do_abc_getsuper(cast<CallStmt2>(instr));
case HR_abc_getsuperx: 
  return a->do_abc_getsuperx(cast<CallStmt3>(instr));
case HR_abc_getsuperns: 
  return a->do_abc_getsuperns(cast<CallStmt3>(instr));
case HR_abc_getsupernsx: 
  return a->do_abc_getsupernsx(cast<CallStmt4>(instr));
case HR_abc_getdescendants: 
  return a->do_abc_getdescendants(cast<CallStmt2>(instr));
case HR_abc_getdescendantsx: 
  return a->do_abc_getdescendantsx(cast<CallStmt3>(instr));
case HR_abc_getdescendantsns: 
  return a->do_abc_getdescendantsns(cast<CallStmt3>(instr));
case HR_abc_getdescendantsnsx: 
  return a->do_abc_getdescendantsnsx(cast<CallStmt4>(instr));
case HR_abc_callprop: 
  return a->do_abc_callprop(cast<CallStmt2>(instr));
case HR_abc_callpropx: 
  return a->do_abc_callpropx(cast<CallStmt3>(instr));
case HR_abc_callpropns: 
  return a->do_abc_callpropns(cast<CallStmt3>(instr));
case HR_abc_callpropnsx: 
  return a->do_abc_callpropnsx(cast<CallStmt4>(instr));
case HR_abc_callproplex: 
  return a->do_abc_callproplex(cast<CallStmt2>(instr));
case HR_abc_callproplexx: 
  return a->do_abc_callproplexx(cast<CallStmt3>(instr));
case HR_abc_callproplexns: 
  return a->do_abc_callproplexns(cast<CallStmt3>(instr));
case HR_abc_callproplexnsx: 
  return a->do_abc_callproplexnsx(cast<CallStmt4>(instr));
case HR_abc_constructprop: 
  return a->do_abc_constructprop(cast<CallStmt2>(instr));
case HR_abc_constructpropx: 
  return a->do_abc_constructpropx(cast<CallStmt3>(instr));
case HR_abc_constructpropns: 
  return a->do_abc_constructpropns(cast<CallStmt3>(instr));
case HR_abc_constructpropnsx: 
  return a->do_abc_constructpropnsx(cast<CallStmt4>(instr));
case HR_abc_callsuper: 
  return a->do_abc_callsuper(cast<CallStmt2>(instr));
case HR_abc_callsuperx: 
  return a->do_abc_callsuperx(cast<CallStmt3>(instr));
case HR_abc_callsuperns: 
  return a->do_abc_callsuperns(cast<CallStmt3>(instr));
case HR_abc_callsupernsx: 
  return a->do_abc_callsupernsx(cast<CallStmt4>(instr));
case HR_callstatic: 
  return a->do_callstatic(cast<CallStmt2>(instr));
case HR_callmethod: 
  return a->do_callmethod(cast<CallStmt2>(instr));
case HR_callinterface: 
  return a->do_callinterface(cast<CallStmt2>(instr));
case HR_newcatch: 
  return a->do_newcatch(cast<UnaryStmt>(instr));
case HR_setslot: 
  return a->do_setslot(cast<CallStmt2>(instr));
case HR_getslot: 
  return a->do_getslot(cast<CallStmt2>(instr));
case HR_slottype: 
  return a->do_slottype(cast<BinaryExpr>(instr));
case HR_getouterscope: 
  return a->do_getouterscope(cast<BinaryExpr>(instr));
case HR_safepoint: 
  return a->do_safepoint(cast<SafepointInstr>(instr));
case HR_setlocal: 
  return a->do_setlocal(cast<SetlocalInstr>(instr));
case HR_newstate: 
  return a->do_newstate(cast<ConstantExpr>(instr));
case HR_deopt_safepoint: 
  return a->do_deopt_safepoint(cast<DeoptSafepointInstr>(instr));
case HR_deopt_finish: 
  return a->do_deopt_finish(cast<DeoptFinishInstr>(instr));
case HR_deopt_finishcall: 
  return a->do_deopt_finishcall(cast<DeoptFinishCallInstr>(instr));
case HR_debugline: 
  return a->do_debugline(cast<DebugInstr>(instr));
case HR_debugfile: 
  return a->do_debugfile(cast<DebugInstr>(instr));
case HR_string2atom: 
  return a->do_string2atom(cast<UnaryExpr>(instr));
case HR_double2atom: 
  return a->do_double2atom(cast<UnaryExpr>(instr));
case HR_int2atom: 
  return a->do_int2atom(cast<UnaryExpr>(instr));
case HR_uint2atom: 
  return a->do_uint2atom(cast<UnaryExpr>(instr));
case HR_scriptobject2atom: 
  return a->do_scriptobject2atom(cast<UnaryExpr>(instr));
case HR_bool2atom: 
  return a->do_bool2atom(cast<UnaryExpr>(instr));
case HR_ns2atom: 
  return a->do_ns2atom(cast<UnaryExpr>(instr));
case HR_atom2bool: 
  return a->do_atom2bool(cast<UnaryExpr>(instr));
case HR_atom2double: 
  return a->do_atom2double(cast<UnaryExpr>(instr));
case HR_atom2string: 
  return a->do_atom2string(cast<UnaryExpr>(instr));
case HR_atom2int: 
  return a->do_atom2int(cast<UnaryExpr>(instr));
case HR_atom2uint: 
  return a->do_atom2uint(cast<UnaryExpr>(instr));
case HR_atom2scriptobject: 
  return a->do_atom2scriptobject(cast<UnaryExpr>(instr));
case HR_atom2ns: 
  return a->do_atom2ns(cast<UnaryExpr>(instr));
case HR_i2d: 
  return a->do_i2d(cast<UnaryExpr>(instr));
case HR_u2d: 
  return a->do_u2d(cast<UnaryExpr>(instr));
case HR_d2i: 
  return a->do_d2i(cast<UnaryExpr>(instr));
case HR_d2u: 
  return a->do_d2u(cast<UnaryExpr>(instr));
case HR_toslot: 
  return a->do_toslot(cast<BinaryExpr>(instr));
case HR_toprimitive: 
  return a->do_toprimitive(cast<UnaryStmt>(instr));
case HR_eqi: 
  return a->do_eqi(cast<BinaryExpr>(instr));
case HR_lti: 
  return a->do_lti(cast<BinaryExpr>(instr));
case HR_lei: 
  return a->do_lei(cast<BinaryExpr>(instr));
case HR_gti: 
  return a->do_gti(cast<BinaryExpr>(instr));
case HR_gei: 
  return a->do_gei(cast<BinaryExpr>(instr));
case HR_eqd: 
  return a->do_eqd(cast<BinaryExpr>(instr));
case HR_ltd: 
  return a->do_ltd(cast<BinaryExpr>(instr));
case HR_led: 
  return a->do_led(cast<BinaryExpr>(instr));
case HR_gtd: 
  return a->do_gtd(cast<BinaryExpr>(instr));
case HR_ged: 
  return a->do_ged(cast<BinaryExpr>(instr));
case HR_equi: 
  return a->do_equi(cast<BinaryExpr>(instr));
case HR_ltui: 
  return a->do_ltui(cast<BinaryExpr>(instr));
case HR_leui: 
  return a->do_leui(cast<BinaryExpr>(instr));
case HR_gtui: 
  return a->do_gtui(cast<BinaryExpr>(instr));
case HR_geui: 
  return a->do_geui(cast<BinaryExpr>(instr));
case HR_eqb: 
  return a->do_eqb(cast<BinaryExpr>(instr));
case HR_doubletoint32: 
  return a->do_doubletoint32(cast<UnaryExpr>(instr));
case HR_i2u: 
  return a->do_i2u(cast<UnaryExpr>(instr));
case HR_u2i: 
  return a->do_u2i(cast<UnaryExpr>(instr));
case HR_abc_dxnslate: 
  return a->do_abc_dxnslate(cast<UnaryStmt>(instr));
case HR_abc_dxns: 
  return a->do_abc_dxns(cast<UnaryStmt>(instr));
case HR_li8: 
  return a->do_li8(cast<UnaryStmt>(instr));
case HR_li16: 
  return a->do_li16(cast<UnaryStmt>(instr));
case HR_li32: 
  return a->do_li32(cast<UnaryStmt>(instr));
case HR_lf32: 
  return a->do_lf32(cast<UnaryStmt>(instr));
case HR_lf64: 
  return a->do_lf64(cast<UnaryStmt>(instr));
case HR_si8: 
  return a->do_si8(cast<BinaryStmt>(instr));
case HR_si16: 
  return a->do_si16(cast<BinaryStmt>(instr));
case HR_si32: 
  return a->do_si32(cast<BinaryStmt>(instr));
case HR_sf32: 
  return a->do_sf32(cast<BinaryStmt>(instr));
case HR_sf64: 
  return a->do_sf64(cast<BinaryStmt>(instr));
case HR_abc_equals: 
  return a->do_abc_equals(cast<BinaryStmt>(instr));
case HR_eqp: 
  return a->do_eqp(cast<BinaryExpr>(instr));
case HR_eqs: 
  return a->do_eqs(cast<BinaryExpr>(instr));
case HR_abc_strictequals: 
  return a->do_abc_strictequals(cast<BinaryExpr>(instr));
case HR_abc_setsuper: 
  return a->do_abc_setsuper(cast<CallStmt2>(instr));
case HR_abc_setsuperx: 
  return a->do_abc_setsuperx(cast<CallStmt3>(instr));
case HR_abc_setsuperns: 
  return a->do_abc_setsuperns(cast<CallStmt3>(instr));
case HR_abc_setsupernsx: 
  return a->do_abc_setsupernsx(cast<CallStmt4>(instr));
case HR_abc_deleteprop: 
  return a->do_abc_deleteprop(cast<CallStmt2>(instr));
case HR_abc_deletepropx: 
  return a->do_abc_deletepropx(cast<CallStmt3>(instr));
case HR_abc_deletepropns: 
  return a->do_abc_deletepropns(cast<CallStmt3>(instr));
case HR_abc_deletepropnsx: 
  return a->do_abc_deletepropnsx(cast<CallStmt4>(instr));
case HR_abc_getprop: 
  return a->do_abc_getprop(cast<CallStmt2>(instr));
case HR_abc_getpropx: 
  return a->do_abc_getpropx(cast<CallStmt3>(instr));
case HR_getpropertylate_u: 
  return a->do_getpropertylate_u(cast<BinaryStmt>(instr));
case HR_getpropertylate_i: 
  return a->do_getpropertylate_i(cast<BinaryStmt>(instr));
case HR_getpropertylate_d: 
  return a->do_getpropertylate_d(cast<BinaryStmt>(instr));
case HR_array_get_u: 
  return a->do_array_get_u(cast<BinaryStmt>(instr));
case HR_array_get_i: 
  return a->do_array_get_i(cast<BinaryStmt>(instr));
case HR_array_get_d: 
  return a->do_array_get_d(cast<BinaryStmt>(instr));
case HR_vectorint_get_u: 
  return a->do_vectorint_get_u(cast<BinaryStmt>(instr));
case HR_vectorint_get_i: 
  return a->do_vectorint_get_i(cast<BinaryStmt>(instr));
case HR_vectorint_get_d: 
  return a->do_vectorint_get_d(cast<BinaryStmt>(instr));
case HR_vectoruint_get_u: 
  return a->do_vectoruint_get_u(cast<BinaryStmt>(instr));
case HR_vectoruint_get_i: 
  return a->do_vectoruint_get_i(cast<BinaryStmt>(instr));
case HR_vectoruint_get_d: 
  return a->do_vectoruint_get_d(cast<BinaryStmt>(instr));
case HR_vectordouble_get_u: 
  return a->do_vectordouble_get_u(cast<BinaryStmt>(instr));
case HR_vectordouble_get_i: 
  return a->do_vectordouble_get_i(cast<BinaryStmt>(instr));
case HR_vectordouble_get_d: 
  return a->do_vectordouble_get_d(cast<BinaryStmt>(instr));
case HR_abc_getpropns: 
  return a->do_abc_getpropns(cast<CallStmt3>(instr));
case HR_abc_getpropnsx: 
  return a->do_abc_getpropnsx(cast<CallStmt4>(instr));
case HR_abc_setprop: 
  return a->do_abc_setprop(cast<CallStmt2>(instr));
case HR_abc_setpropx: 
  return a->do_abc_setpropx(cast<CallStmt3>(instr));
case HR_setpropertylate_u: 
  return a->do_setpropertylate_u(cast<CallStmt2>(instr));
case HR_setpropertylate_i: 
  return a->do_setpropertylate_i(cast<CallStmt2>(instr));
case HR_setpropertylate_d: 
  return a->do_setpropertylate_d(cast<CallStmt2>(instr));
case HR_array_set_u: 
  return a->do_array_set_u(cast<CallStmt2>(instr));
case HR_array_set_i: 
  return a->do_array_set_i(cast<CallStmt2>(instr));
case HR_array_set_d: 
  return a->do_array_set_d(cast<CallStmt2>(instr));
case HR_vectorint_set_u: 
  return a->do_vectorint_set_u(cast<CallStmt2>(instr));
case HR_vectorint_set_i: 
  return a->do_vectorint_set_i(cast<CallStmt2>(instr));
case HR_vectorint_set_d: 
  return a->do_vectorint_set_d(cast<CallStmt2>(instr));
case HR_vectoruint_set_u: 
  return a->do_vectoruint_set_u(cast<CallStmt2>(instr));
case HR_vectoruint_set_i: 
  return a->do_vectoruint_set_i(cast<CallStmt2>(instr));
case HR_vectoruint_set_d: 
  return a->do_vectoruint_set_d(cast<CallStmt2>(instr));
case HR_vectordouble_set_u: 
  return a->do_vectordouble_set_u(cast<CallStmt2>(instr));
case HR_vectordouble_set_i: 
  return a->do_vectordouble_set_i(cast<CallStmt2>(instr));
case HR_vectordouble_set_d: 
  return a->do_vectordouble_set_d(cast<CallStmt2>(instr));
case HR_abc_setpropns: 
  return a->do_abc_setpropns(cast<CallStmt3>(instr));
case HR_abc_setpropnsx: 
  return a->do_abc_setpropnsx(cast<CallStmt4>(instr));
case HR_abc_initprop: 
  return a->do_abc_initprop(cast<CallStmt2>(instr));
case HR_abc_initpropx: 
  return a->do_abc_initpropx(cast<CallStmt3>(instr));
case HR_abc_initpropns: 
  return a->do_abc_initpropns(cast<CallStmt3>(instr));
case HR_abc_initpropnsx: 
  return a->do_abc_initpropnsx(cast<CallStmt4>(instr));
case HR_abc_increment: 
  return a->do_abc_increment(cast<UnaryStmt>(instr));
case HR_abc_decrement: 
  return a->do_abc_decrement(cast<UnaryStmt>(instr));
case HR_abc_increment_i: 
  return a->do_abc_increment_i(cast<UnaryStmt>(instr));
case HR_abc_decrement_i: 
  return a->do_abc_decrement_i(cast<UnaryStmt>(instr));
case HR_abc_not: 
  return a->do_abc_not(cast<UnaryStmt>(instr));
case HR_abc_negate: 
  return a->do_abc_negate(cast<UnaryStmt>(instr));
case HR_abc_bitnot: 
  return a->do_abc_bitnot(cast<UnaryStmt>(instr));
case HR_abc_negate_i: 
  return a->do_abc_negate_i(cast<UnaryStmt>(instr));
case HR_abc_sxi1: 
  return a->do_abc_sxi1(cast<UnaryStmt>(instr));
case HR_abc_sxi8: 
  return a->do_abc_sxi8(cast<UnaryStmt>(instr));
case HR_abc_sxi16: 
  return a->do_abc_sxi16(cast<UnaryStmt>(instr));
case HR_abc_checkfilter: 
  return a->do_abc_checkfilter(cast<UnaryStmt>(instr));
case HR_abc_li8: 
  return a->do_abc_li8(cast<UnaryStmt>(instr));
case HR_abc_li16: 
  return a->do_abc_li16(cast<UnaryStmt>(instr));
case HR_abc_li32: 
  return a->do_abc_li32(cast<UnaryStmt>(instr));
case HR_abc_lf32: 
  return a->do_abc_lf32(cast<UnaryStmt>(instr));
case HR_abc_lf64: 
  return a->do_abc_lf64(cast<UnaryStmt>(instr));
case HR_abc_si8: 
  return a->do_abc_si8(cast<BinaryStmt>(instr));
case HR_abc_si16: 
  return a->do_abc_si16(cast<BinaryStmt>(instr));
case HR_abc_si32: 
  return a->do_abc_si32(cast<BinaryStmt>(instr));
case HR_abc_sf32: 
  return a->do_abc_sf32(cast<BinaryStmt>(instr));
case HR_abc_sf64: 
  return a->do_abc_sf64(cast<BinaryStmt>(instr));
case HR_abc_subtract: 
  return a->do_abc_subtract(cast<BinaryStmt>(instr));
case HR_abc_multiply: 
  return a->do_abc_multiply(cast<BinaryStmt>(instr));
case HR_abc_modulo: 
  return a->do_abc_modulo(cast<BinaryStmt>(instr));
case HR_abc_divide: 
  return a->do_abc_divide(cast<BinaryStmt>(instr));
case HR_abc_add_i: 
  return a->do_abc_add_i(cast<BinaryStmt>(instr));
case HR_abc_subtract_i: 
  return a->do_abc_subtract_i(cast<BinaryStmt>(instr));
case HR_abc_multiply_i: 
  return a->do_abc_multiply_i(cast<BinaryStmt>(instr));
case HR_abc_bitor: 
  return a->do_abc_bitor(cast<BinaryStmt>(instr));
case HR_abc_bitand: 
  return a->do_abc_bitand(cast<BinaryStmt>(instr));
case HR_abc_bitxor: 
  return a->do_abc_bitxor(cast<BinaryStmt>(instr));
case HR_abc_lshift: 
  return a->do_abc_lshift(cast<BinaryStmt>(instr));
case HR_abc_rshift: 
  return a->do_abc_rshift(cast<BinaryStmt>(instr));
case HR_abc_urshift: 
  return a->do_abc_urshift(cast<BinaryStmt>(instr));
case HR_add_ui: 
  return a->do_add_ui(cast<BinaryStmt>(instr));
case HR_add_nn: 
  return a->do_add_nn(cast<BinaryStmt>(instr));
case HR_add_ss: 
  return a->do_add_ss(cast<BinaryStmt>(instr));
case HR_abc_lessthan: 
  return a->do_abc_lessthan(cast<BinaryStmt>(instr));
case HR_abc_greaterequals: 
  return a->do_abc_greaterequals(cast<BinaryStmt>(instr));
case HR_abc_greaterthan: 
  return a->do_abc_greaterthan(cast<BinaryStmt>(instr));
case HR_abc_lessequals: 
  return a->do_abc_lessequals(cast<BinaryStmt>(instr));
case HR_abc_equals_ii: 
  return a->do_abc_equals_ii(cast<BinaryStmt>(instr));
case HR_abc_equals_uu: 
  return a->do_abc_equals_uu(cast<BinaryStmt>(instr));
case HR_abc_equals_bb: 
  return a->do_abc_equals_bb(cast<BinaryStmt>(instr));
case HR_abc_equals_nn: 
  return a->do_abc_equals_nn(cast<BinaryStmt>(instr));
case HR_abc_equals_pp: 
  return a->do_abc_equals_pp(cast<BinaryStmt>(instr));
case HR_abc_equals_ss: 
  return a->do_abc_equals_ss(cast<BinaryStmt>(instr));
case HR_abc_getslot: 
  return a->do_abc_getslot(cast<CallStmt2>(instr));
case HR_abc_getprop_slot: 
  return a->do_abc_getprop_slot(cast<CallStmt2>(instr));
case HR_getpropx_u: 
  return a->do_getpropx_u(cast<CallStmt3>(instr));
case HR_getpropx_i: 
  return a->do_getpropx_i(cast<CallStmt3>(instr));
case HR_getpropx_d: 
  return a->do_getpropx_d(cast<CallStmt3>(instr));
case HR_getpropx_au: 
  return a->do_getpropx_au(cast<CallStmt3>(instr));
case HR_getpropx_ai: 
  return a->do_getpropx_ai(cast<CallStmt3>(instr));
case HR_getpropx_ad: 
  return a->do_getpropx_ad(cast<CallStmt3>(instr));
case HR_getpropx_viu: 
  return a->do_getpropx_viu(cast<CallStmt3>(instr));
case HR_getpropx_vii: 
  return a->do_getpropx_vii(cast<CallStmt3>(instr));
case HR_getpropx_vid: 
  return a->do_getpropx_vid(cast<CallStmt3>(instr));
case HR_getpropx_vuu: 
  return a->do_getpropx_vuu(cast<CallStmt3>(instr));
case HR_getpropx_vui: 
  return a->do_getpropx_vui(cast<CallStmt3>(instr));
case HR_getpropx_vud: 
  return a->do_getpropx_vud(cast<CallStmt3>(instr));
case HR_getpropx_vdu: 
  return a->do_getpropx_vdu(cast<CallStmt3>(instr));
case HR_getpropx_vdi: 
  return a->do_getpropx_vdi(cast<CallStmt3>(instr));
case HR_getpropx_vdd: 
  return a->do_getpropx_vdd(cast<CallStmt3>(instr));
case HR_abc_setprop_slot: 
  return a->do_abc_setprop_slot(cast<CallStmt2>(instr));
case HR_setpropx_u: 
  return a->do_setpropx_u(cast<CallStmt3>(instr));
case HR_setpropx_i: 
  return a->do_setpropx_i(cast<CallStmt3>(instr));
case HR_setpropx_d: 
  return a->do_setpropx_d(cast<CallStmt3>(instr));
case HR_setpropx_au: 
  return a->do_setpropx_au(cast<CallStmt3>(instr));
case HR_setpropx_ai: 
  return a->do_setpropx_ai(cast<CallStmt3>(instr));
case HR_setpropx_ad: 
  return a->do_setpropx_ad(cast<CallStmt3>(instr));
case HR_setpropx_viu: 
  return a->do_setpropx_viu(cast<CallStmt3>(instr));
case HR_setpropx_vii: 
  return a->do_setpropx_vii(cast<CallStmt3>(instr));
case HR_setpropx_vid: 
  return a->do_setpropx_vid(cast<CallStmt3>(instr));
case HR_setpropx_vuu: 
  return a->do_setpropx_vuu(cast<CallStmt3>(instr));
case HR_setpropx_vui: 
  return a->do_setpropx_vui(cast<CallStmt3>(instr));
case HR_setpropx_vud: 
  return a->do_setpropx_vud(cast<CallStmt3>(instr));
case HR_setpropx_vdu: 
  return a->do_setpropx_vdu(cast<CallStmt3>(instr));
case HR_setpropx_vdi: 
  return a->do_setpropx_vdi(cast<CallStmt3>(instr));
case HR_setpropx_vdd: 
  return a->do_setpropx_vdd(cast<CallStmt3>(instr));
case HR_abc_setslot: 
  return a->do_abc_setslot(cast<CallStmt2>(instr));
case HR_findprop2finddef: 
  return a->do_findprop2finddef(cast<NaryStmt1>(instr));
case HR_findprop2getouter: 
  return a->do_findprop2getouter(cast<NaryStmt1>(instr));
case HR_callprop_string: 
  return a->do_callprop_string(cast<CallStmt2>(instr));
case HR_coerce_any: 
  return a->do_coerce_any(cast<BinaryStmt>(instr));
case HR_coerce_object: 
  return a->do_coerce_object(cast<BinaryStmt>(instr));
case HR_coerce_number: 
  return a->do_coerce_number(cast<BinaryStmt>(instr));
case HR_coerce_int: 
  return a->do_coerce_int(cast<BinaryStmt>(instr));
case HR_coerce_uint: 
  return a->do_coerce_uint(cast<BinaryStmt>(instr));
case HR_coerce_boolean: 
  return a->do_coerce_boolean(cast<BinaryStmt>(instr));
case HR_coerce_string: 
  return a->do_coerce_string(cast<BinaryStmt>(instr));
case HR_coerce_ns: 
  return a->do_coerce_ns(cast<BinaryStmt>(instr));
case HR_inttouint: 
  return a->do_inttouint(cast<UnaryStmt>(instr));
case HR_uinttoint: 
  return a->do_uinttoint(cast<UnaryStmt>(instr));
case HR_numbertoint: 
  return a->do_numbertoint(cast<UnaryStmt>(instr));
case HR_numbertouint: 
  return a->do_numbertouint(cast<UnaryStmt>(instr));
case HR_abc_modulo_and: 
  return a->do_abc_modulo_and(cast<BinaryStmt>(instr));
