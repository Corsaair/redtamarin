///
/// generated by templates.py -- do not edit
///

namespace halfmoon {
const nanojit::CallInfo LirEmitter::lir_table[] = {
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "start")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "template")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "catchblock")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "return")},
  { (uintptr_t)&Stubs::do_throw, CallInfo::typeSig2(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "throw")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "goto")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "label")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "if")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "switch")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "arm")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "const")},
  { (uintptr_t)&Stubs::do_coerce, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "coerce")},
  { (uintptr_t)&Stubs::do_cast, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "cast")},
  { (uintptr_t)&Stubs::do_castobject, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "castobject")},
  { (uintptr_t)&Stubs::do_tonumber, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "tonumber")},
  { (uintptr_t)&Stubs::do_toint, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "toint")},
  { (uintptr_t)&Stubs::do_touint, CallInfo::typeSig2(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "touint")},
  { (uintptr_t)&Stubs::do_toboolean, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "toboolean")},
  { (uintptr_t)&Stubs::do_d2b, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "d2b")},
  { (uintptr_t)&Stubs::do_caststring, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "caststring")},
  { (uintptr_t)&Stubs::do_castns, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "castns")},
  { (uintptr_t)&Stubs::do_cknull, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "cknull")},
  { (uintptr_t)&Stubs::do_cknullobject, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "cknullobject")},
  { (uintptr_t)&Stubs::do_cktimeout, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "cktimeout")},
  { (uintptr_t)&Stubs::do_abc_hasnext, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_hasnext")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "abc_hasnext2")},
  { (uintptr_t)&Stubs::do_never, CallInfo::typeSig1(ARGTYPE_V, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "never")},
  { (uintptr_t)&Stubs::do_call, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "call")},
  { (uintptr_t)&Stubs::do_construct, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "construct")},
  { (uintptr_t)&Stubs::do_constructsuper, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "constructsuper")},
  { (uintptr_t)&Stubs::do_loadenv_namespace, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_namespace")},
  { (uintptr_t)&Stubs::do_loadenv_boolean, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_boolean")},
  { (uintptr_t)&Stubs::do_loadenv_number, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_number")},
  { (uintptr_t)&Stubs::do_loadenv_string, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_string")},
  { (uintptr_t)&Stubs::do_loadenv_interface, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_interface")},
  { (uintptr_t)&Stubs::do_loadenv, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv")},
  { (uintptr_t)&Stubs::do_loadenv_atom, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_atom")},
  { (uintptr_t)&Stubs::do_loadinitenv, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadinitenv")},
  { (uintptr_t)&Stubs::do_loadsuperinitenv, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadsuperinitenv")},
  { (uintptr_t)&Stubs::do_loadenv_env, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "loadenv_env")},
  { (uintptr_t)&Stubs::do_newobject, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newobject")},
  { (uintptr_t)&Stubs::do_newarray, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newarray")},
  { (uintptr_t)&Stubs::do_applytype, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "applytype")},
  { (uintptr_t)&Stubs::do_newinstance, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "newinstance")},
  { (uintptr_t)&Stubs::do_abc_convert_s, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_convert_s")},
  { (uintptr_t)&Stubs::do_abc_esc_xelem, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_esc_xelem")},
  { (uintptr_t)&Stubs::do_abc_esc_xattr, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_esc_xattr")},
  { (uintptr_t)&Stubs::do_abc_typeof, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "abc_typeof")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_int")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_number")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_numeric")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_string")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_object")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_array")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "speculate_bool")},
  { (uintptr_t)&Stubs::do_ckfilter, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ckfilter")},
  { (uintptr_t)&Stubs::do_abc_add, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_add")},
  { (uintptr_t)&Stubs::do_addd, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "addd")},
  { (uintptr_t)&Stubs::do_concat_strings, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "concat_strings")},
  { (uintptr_t)&Stubs::do_abc_nextname, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_nextname")},
  { (uintptr_t)&Stubs::do_abc_nextvalue, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_nextvalue")},
  { (uintptr_t)&Stubs::do_lessthan, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "lessthan")},
  { (uintptr_t)&Stubs::do_lessequals, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "lessequals")},
  { (uintptr_t)&Stubs::do_greaterthan, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "greaterthan")},
  { (uintptr_t)&Stubs::do_greaterequals, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "greaterequals")},
  { (uintptr_t)&Stubs::do_abc_instanceof, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_instanceof")},
  { (uintptr_t)&Stubs::do_abc_istype, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_istype")},
  { (uintptr_t)&Stubs::do_abc_istypelate, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_istypelate")},
  { (uintptr_t)&Stubs::do_abc_astype, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "abc_astype")},
  { (uintptr_t)&Stubs::do_abc_astypelate, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_astypelate")},
  { (uintptr_t)&Stubs::do_abc_in, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_in")},
  { (uintptr_t)&Stubs::do_divd, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "divd")},
  { (uintptr_t)&Stubs::do_modulo, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "modulo")},
  { (uintptr_t)&Stubs::do_subd, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "subd")},
  { (uintptr_t)&Stubs::do_muld, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "muld")},
  { (uintptr_t)&Stubs::do_addi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "addi")},
  { (uintptr_t)&Stubs::do_subi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "subi")},
  { (uintptr_t)&Stubs::do_muli, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "muli")},
  { (uintptr_t)&Stubs::do_ori, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ori")},
  { (uintptr_t)&Stubs::do_andi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "andi")},
  { (uintptr_t)&Stubs::do_xori, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "xori")},
  { (uintptr_t)&Stubs::do_lshi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "lshi")},
  { (uintptr_t)&Stubs::do_rshi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "rshi")},
  { (uintptr_t)&Stubs::do_rshui, CallInfo::typeSig3(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "rshui")},
  { (uintptr_t)&Stubs::do_noti, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "noti")},
  { (uintptr_t)&Stubs::do_negi, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "negi")},
  { (uintptr_t)&Stubs::do_negd, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "negd")},
  { (uintptr_t)&Stubs::do_not, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "not")},
  { (uintptr_t)&Stubs::do_newactivation, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newactivation")},
  { (uintptr_t)&Stubs::do_abc_finddef, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_finddef")},
  { (uintptr_t)&Stubs::do_abc_findpropstrict, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropstrict")},
  { (uintptr_t)&Stubs::do_abc_findpropstrictx, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropstrictx")},
  { (uintptr_t)&Stubs::do_abc_findpropstrictns, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropstrictns")},
  { (uintptr_t)&Stubs::do_abc_findpropstrictnsx, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropstrictnsx")},
  { (uintptr_t)&Stubs::do_abc_findproperty, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findproperty")},
  { (uintptr_t)&Stubs::do_abc_findpropertyx, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropertyx")},
  { (uintptr_t)&Stubs::do_abc_findpropertyns, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropertyns")},
  { (uintptr_t)&Stubs::do_abc_findpropertynsx, CallInfo::typeSig7(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_findpropertynsx")},
  { (uintptr_t)&Stubs::do_newclass, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newclass")},
  { (uintptr_t)&Stubs::do_newfunction, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newfunction")},
  { (uintptr_t)&Stubs::do_abc_getsuper, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getsuper")},
  { (uintptr_t)&Stubs::do_abc_getsuperx, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getsuperx")},
  { (uintptr_t)&Stubs::do_abc_getsuperns, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getsuperns")},
  { (uintptr_t)&Stubs::do_abc_getsupernsx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getsupernsx")},
  { (uintptr_t)&Stubs::do_abc_getdescendants, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getdescendants")},
  { (uintptr_t)&Stubs::do_abc_getdescendantsx, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getdescendantsx")},
  { (uintptr_t)&Stubs::do_abc_getdescendantsns, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getdescendantsns")},
  { (uintptr_t)&Stubs::do_abc_getdescendantsnsx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getdescendantsnsx")},
  { (uintptr_t)&Stubs::do_abc_callprop, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callprop")},
  { (uintptr_t)&Stubs::do_abc_callpropx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callpropx")},
  { (uintptr_t)&Stubs::do_abc_callpropns, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callpropns")},
  { (uintptr_t)&Stubs::do_abc_callpropnsx, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callpropnsx")},
  { (uintptr_t)&Stubs::do_abc_callproplex, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callproplex")},
  { (uintptr_t)&Stubs::do_abc_callproplexx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callproplexx")},
  { (uintptr_t)&Stubs::do_abc_callproplexns, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callproplexns")},
  { (uintptr_t)&Stubs::do_abc_callproplexnsx, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callproplexnsx")},
  { (uintptr_t)&Stubs::do_abc_constructprop, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_constructprop")},
  { (uintptr_t)&Stubs::do_abc_constructpropx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_constructpropx")},
  { (uintptr_t)&Stubs::do_abc_constructpropns, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_constructpropns")},
  { (uintptr_t)&Stubs::do_abc_constructpropnsx, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_constructpropnsx")},
  { (uintptr_t)&Stubs::do_abc_callsuper, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callsuper")},
  { (uintptr_t)&Stubs::do_abc_callsuperx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callsuperx")},
  { (uintptr_t)&Stubs::do_abc_callsuperns, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callsuperns")},
  { (uintptr_t)&Stubs::do_abc_callsupernsx, CallInfo::typeSig6(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_callsupernsx")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "callstatic")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "callmethod")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "callinterface")},
  { (uintptr_t)&Stubs::do_newcatch, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "newcatch")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "setslot")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "getslot")},
  { (uintptr_t)&Stubs::do_slottype, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "slottype")},
  { (uintptr_t)&Stubs::do_getouterscope, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "getouterscope")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "safepoint")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "setlocal")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "newstate")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "deopt_safepoint")},
  { (uintptr_t)&Stubs::do_deopt_finish, CallInfo::typeSig1(ARGTYPE_V, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "deopt_finish")},
  { 0, 0, ABI_CDECL, 0, ACCSET_NONE verbose_only(, "deopt_finishcall")},
  { (uintptr_t)&Stubs::do_debugline, CallInfo::typeSig2(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "debugline")},
  { (uintptr_t)&Stubs::do_debugfile, CallInfo::typeSig2(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "debugfile")},
  { (uintptr_t)&Stubs::do_string2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "string2atom")},
  { (uintptr_t)&Stubs::do_double2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "double2atom")},
  { (uintptr_t)&Stubs::do_int2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "int2atom")},
  { (uintptr_t)&Stubs::do_uint2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "uint2atom")},
  { (uintptr_t)&Stubs::do_scriptobject2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "scriptobject2atom")},
  { (uintptr_t)&Stubs::do_bool2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "bool2atom")},
  { (uintptr_t)&Stubs::do_ns2atom, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ns2atom")},
  { (uintptr_t)&Stubs::do_atom2bool, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2bool")},
  { (uintptr_t)&Stubs::do_atom2double, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2double")},
  { (uintptr_t)&Stubs::do_atom2string, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2string")},
  { (uintptr_t)&Stubs::do_atom2int, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2int")},
  { (uintptr_t)&Stubs::do_atom2uint, CallInfo::typeSig2(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2uint")},
  { (uintptr_t)&Stubs::do_atom2scriptobject, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2scriptobject")},
  { (uintptr_t)&Stubs::do_atom2ns, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "atom2ns")},
  { (uintptr_t)&Stubs::do_i2d, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "i2d")},
  { (uintptr_t)&Stubs::do_u2d, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "u2d")},
  { (uintptr_t)&Stubs::do_d2i, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "d2i")},
  { (uintptr_t)&Stubs::do_d2u, CallInfo::typeSig2(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "d2u")},
  { (uintptr_t)&Stubs::do_toslot, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "toslot")},
  { (uintptr_t)&Stubs::do_toprimitive, CallInfo::typeSig2(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "toprimitive")},
  { (uintptr_t)&Stubs::do_eqi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "eqi")},
  { (uintptr_t)&Stubs::do_lti, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "lti")},
  { (uintptr_t)&Stubs::do_lei, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "lei")},
  { (uintptr_t)&Stubs::do_gti, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "gti")},
  { (uintptr_t)&Stubs::do_gei, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "gei")},
  { (uintptr_t)&Stubs::do_eqd, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "eqd")},
  { (uintptr_t)&Stubs::do_ltd, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ltd")},
  { (uintptr_t)&Stubs::do_led, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "led")},
  { (uintptr_t)&Stubs::do_gtd, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "gtd")},
  { (uintptr_t)&Stubs::do_ged, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ged")},
  { (uintptr_t)&Stubs::do_equi, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "equi")},
  { (uintptr_t)&Stubs::do_ltui, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "ltui")},
  { (uintptr_t)&Stubs::do_leui, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "leui")},
  { (uintptr_t)&Stubs::do_gtui, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "gtui")},
  { (uintptr_t)&Stubs::do_geui, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "geui")},
  { (uintptr_t)&Stubs::do_eqb, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "eqb")},
  { (uintptr_t)&Stubs::do_doubletoint32, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "doubletoint32")},
  { (uintptr_t)&Stubs::do_i2u, CallInfo::typeSig2(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "i2u")},
  { (uintptr_t)&Stubs::do_u2i, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "u2i")},
  { (uintptr_t)&Stubs::do_abc_dxnslate, CallInfo::typeSig2(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_dxnslate")},
  { (uintptr_t)&Stubs::do_abc_dxns, CallInfo::typeSig2(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_dxns")},
  { (uintptr_t)&Stubs::do_li8, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "li8")},
  { (uintptr_t)&Stubs::do_li16, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "li16")},
  { (uintptr_t)&Stubs::do_li32, CallInfo::typeSig2(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "li32")},
  { (uintptr_t)&Stubs::do_lf32, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "lf32")},
  { (uintptr_t)&Stubs::do_lf64, CallInfo::typeSig2(ARGTYPE_D, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "lf64")},
  { (uintptr_t)&Stubs::do_si8, CallInfo::typeSig3(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "si8")},
  { (uintptr_t)&Stubs::do_si16, CallInfo::typeSig3(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "si16")},
  { (uintptr_t)&Stubs::do_si32, CallInfo::typeSig3(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "si32")},
  { (uintptr_t)&Stubs::do_sf32, CallInfo::typeSig3(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "sf32")},
  { (uintptr_t)&Stubs::do_sf64, CallInfo::typeSig3(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "sf64")},
  { (uintptr_t)&Stubs::do_abc_equals, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_equals")},
  { (uintptr_t)&Stubs::do_eqp, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "eqp")},
  { (uintptr_t)&Stubs::do_eqs, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "eqs")},
  { (uintptr_t)&Stubs::do_abc_strictequals, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 1, ACCSET_NONE verbose_only(, "abc_strictequals")},
  { (uintptr_t)&Stubs::do_abc_setsuper, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setsuper")},
  { (uintptr_t)&Stubs::do_abc_setsuperx, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setsuperx")},
  { (uintptr_t)&Stubs::do_abc_setsuperns, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setsuperns")},
  { (uintptr_t)&Stubs::do_abc_setsupernsx, CallInfo::typeSig6(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setsupernsx")},
  { (uintptr_t)&Stubs::do_abc_deleteprop, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_deleteprop")},
  { (uintptr_t)&Stubs::do_abc_deletepropx, CallInfo::typeSig4(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_deletepropx")},
  { (uintptr_t)&Stubs::do_abc_deletepropns, CallInfo::typeSig4(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_deletepropns")},
  { (uintptr_t)&Stubs::do_abc_deletepropnsx, CallInfo::typeSig5(ARGTYPE_I, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_deletepropnsx")},
  { (uintptr_t)&Stubs::do_abc_getprop, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getprop")},
  { (uintptr_t)&Stubs::do_abc_getpropx, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getpropx")},
  { (uintptr_t)&Stubs::do_getpropertylate_u, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "getpropertylate_u")},
  { (uintptr_t)&Stubs::do_getpropertylate_i, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "getpropertylate_i")},
  { (uintptr_t)&Stubs::do_getpropertylate_d, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "getpropertylate_d")},
  { (uintptr_t)&Stubs::do_array_get_u, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_get_u")},
  { (uintptr_t)&Stubs::do_array_get_i, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_get_i")},
  { (uintptr_t)&Stubs::do_array_get_d, CallInfo::typeSig3(ARGTYPE_P, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_get_d")},
  { (uintptr_t)&Stubs::do_vectorint_get_u, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_get_u")},
  { (uintptr_t)&Stubs::do_vectorint_get_i, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_get_i")},
  { (uintptr_t)&Stubs::do_vectorint_get_d, CallInfo::typeSig3(ARGTYPE_I, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_get_d")},
  { (uintptr_t)&Stubs::do_vectoruint_get_u, CallInfo::typeSig3(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_get_u")},
  { (uintptr_t)&Stubs::do_vectoruint_get_i, CallInfo::typeSig3(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_get_i")},
  { (uintptr_t)&Stubs::do_vectoruint_get_d, CallInfo::typeSig3(ARGTYPE_UI, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_get_d")},
  { (uintptr_t)&Stubs::do_vectordouble_get_u, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_get_u")},
  { (uintptr_t)&Stubs::do_vectordouble_get_i, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_get_i")},
  { (uintptr_t)&Stubs::do_vectordouble_get_d, CallInfo::typeSig3(ARGTYPE_D, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_get_d")},
  { (uintptr_t)&Stubs::do_abc_getpropns, CallInfo::typeSig4(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getpropns")},
  { (uintptr_t)&Stubs::do_abc_getpropnsx, CallInfo::typeSig5(ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_getpropnsx")},
  { (uintptr_t)&Stubs::do_abc_setprop, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setprop")},
  { (uintptr_t)&Stubs::do_abc_setpropx, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setpropx")},
  { (uintptr_t)&Stubs::do_setpropertylate_u, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "setpropertylate_u")},
  { (uintptr_t)&Stubs::do_setpropertylate_i, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "setpropertylate_i")},
  { (uintptr_t)&Stubs::do_setpropertylate_d, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "setpropertylate_d")},
  { (uintptr_t)&Stubs::do_array_set_u, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_set_u")},
  { (uintptr_t)&Stubs::do_array_set_i, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_set_i")},
  { (uintptr_t)&Stubs::do_array_set_d, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "array_set_d")},
  { (uintptr_t)&Stubs::do_vectorint_set_u, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_set_u")},
  { (uintptr_t)&Stubs::do_vectorint_set_i, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_set_i")},
  { (uintptr_t)&Stubs::do_vectorint_set_d, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P, ARGTYPE_I), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectorint_set_d")},
  { (uintptr_t)&Stubs::do_vectoruint_set_u, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_set_u")},
  { (uintptr_t)&Stubs::do_vectoruint_set_i, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_set_i")},
  { (uintptr_t)&Stubs::do_vectoruint_set_d, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P, ARGTYPE_UI), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectoruint_set_d")},
  { (uintptr_t)&Stubs::do_vectordouble_set_u, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_UI, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_set_u")},
  { (uintptr_t)&Stubs::do_vectordouble_set_i, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_I, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_set_i")},
  { (uintptr_t)&Stubs::do_vectordouble_set_d, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_D, ARGTYPE_P, ARGTYPE_D), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "vectordouble_set_d")},
  { (uintptr_t)&Stubs::do_abc_setpropns, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setpropns")},
  { (uintptr_t)&Stubs::do_abc_setpropnsx, CallInfo::typeSig6(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_setpropnsx")},
  { (uintptr_t)&Stubs::do_abc_initprop, CallInfo::typeSig4(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_initprop")},
  { (uintptr_t)&Stubs::do_abc_initpropx, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_initpropx")},
  { (uintptr_t)&Stubs::do_abc_initpropns, CallInfo::typeSig5(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_initpropns")},
  { (uintptr_t)&Stubs::do_abc_initpropnsx, CallInfo::typeSig6(ARGTYPE_V, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P, ARGTYPE_P), ABI_CDECL, 0, ACCSET_ALL verbose_only(, "abc_initpropnsx")},
};

const int LirEmitter::stub_fixc[] = {
  -1, // start
  -1, // template
  -1, // catchblock
  0, // return
  -1, // throw
  0, // goto
  -1, // label
  1, // if
  1, // switch
  -1, // arm
  -1, // const
  -1, // coerce
  -1, // cast
  -1, // castobject
  -1, // tonumber
  -1, // toint
  -1, // touint
  -1, // toboolean
  -1, // d2b
  -1, // caststring
  -1, // castns
  -1, // cknull
  -1, // cknullobject
  -1, // cktimeout
  -1, // abc_hasnext
  -1, // abc_hasnext2
  -1, // never
  1, // call
  1, // construct
  1, // constructsuper
  -1, // loadenv_namespace
  -1, // loadenv_boolean
  -1, // loadenv_number
  -1, // loadenv_string
  -1, // loadenv_interface
  -1, // loadenv
  -1, // loadenv_atom
  -1, // loadinitenv
  -1, // loadsuperinitenv
  -1, // loadenv_env
  0, // newobject
  0, // newarray
  0, // applytype
  -1, // newinstance
  -1, // abc_convert_s
  -1, // abc_esc_xelem
  -1, // abc_esc_xattr
  -1, // abc_typeof
  -1, // speculate_int
  -1, // speculate_number
  -1, // speculate_numeric
  -1, // speculate_string
  -1, // speculate_object
  -1, // speculate_array
  -1, // speculate_bool
  -1, // ckfilter
  -1, // abc_add
  -1, // addd
  -1, // concat_strings
  -1, // abc_nextname
  -1, // abc_nextvalue
  -1, // lessthan
  -1, // lessequals
  -1, // greaterthan
  -1, // greaterequals
  -1, // abc_instanceof
  -1, // abc_istype
  -1, // abc_istypelate
  -1, // abc_astype
  -1, // abc_astypelate
  -1, // abc_in
  -1, // divd
  -1, // modulo
  -1, // subd
  -1, // muld
  -1, // addi
  -1, // subi
  -1, // muli
  -1, // ori
  -1, // andi
  -1, // xori
  -1, // lshi
  -1, // rshi
  -1, // rshui
  -1, // noti
  -1, // negi
  -1, // negd
  -1, // not
  -1, // newactivation
  -1, // abc_finddef
  3, // abc_findpropstrict
  4, // abc_findpropstrictx
  4, // abc_findpropstrictns
  4, // abc_findpropstrictnsx
  3, // abc_findproperty
  4, // abc_findpropertyx
  4, // abc_findpropertyns
  4, // abc_findpropertynsx
  2, // newclass
  1, // newfunction
  -1, // abc_getsuper
  -1, // abc_getsuperx
  -1, // abc_getsuperns
  -1, // abc_getsupernsx
  -1, // abc_getdescendants
  -1, // abc_getdescendantsx
  -1, // abc_getdescendantsns
  -1, // abc_getdescendantsnsx
  1, // abc_callprop
  2, // abc_callpropx
  2, // abc_callpropns
  3, // abc_callpropnsx
  1, // abc_callproplex
  2, // abc_callproplexx
  2, // abc_callproplexns
  3, // abc_callproplexnsx
  1, // abc_constructprop
  2, // abc_constructpropx
  2, // abc_constructpropns
  3, // abc_constructpropnsx
  1, // abc_callsuper
  2, // abc_callsuperx
  2, // abc_callsuperns
  3, // abc_callsupernsx
  1, // callstatic
  1, // callmethod
  1, // callinterface
  -1, // newcatch
  -1, // setslot
  -1, // getslot
  -1, // slottype
  -1, // getouterscope
  0, // safepoint
  -1, // setlocal
  -1, // newstate
  0, // deopt_safepoint
  -1, // deopt_finish
  -1, // deopt_finishcall
  -1, // debugline
  -1, // debugfile
  -1, // string2atom
  -1, // double2atom
  -1, // int2atom
  -1, // uint2atom
  -1, // scriptobject2atom
  -1, // bool2atom
  -1, // ns2atom
  -1, // atom2bool
  -1, // atom2double
  -1, // atom2string
  -1, // atom2int
  -1, // atom2uint
  -1, // atom2scriptobject
  -1, // atom2ns
  -1, // i2d
  -1, // u2d
  -1, // d2i
  -1, // d2u
  -1, // toslot
  -1, // toprimitive
  -1, // eqi
  -1, // lti
  -1, // lei
  -1, // gti
  -1, // gei
  -1, // eqd
  -1, // ltd
  -1, // led
  -1, // gtd
  -1, // ged
  -1, // equi
  -1, // ltui
  -1, // leui
  -1, // gtui
  -1, // geui
  -1, // eqb
  -1, // doubletoint32
  -1, // i2u
  -1, // u2i
  -1, // abc_dxnslate
  -1, // abc_dxns
  -1, // li8
  -1, // li16
  -1, // li32
  -1, // lf32
  -1, // lf64
  -1, // si8
  -1, // si16
  -1, // si32
  -1, // sf32
  -1, // sf64
  -1, // abc_equals
  -1, // eqp
  -1, // eqs
  -1, // abc_strictequals
  -1, // abc_setsuper
  -1, // abc_setsuperx
  -1, // abc_setsuperns
  -1, // abc_setsupernsx
  -1, // abc_deleteprop
  -1, // abc_deletepropx
  -1, // abc_deletepropns
  -1, // abc_deletepropnsx
  -1, // abc_getprop
  -1, // abc_getpropx
  -1, // getpropertylate_u
  -1, // getpropertylate_i
  -1, // getpropertylate_d
  -1, // array_get_u
  -1, // array_get_i
  -1, // array_get_d
  -1, // vectorint_get_u
  -1, // vectorint_get_i
  -1, // vectorint_get_d
  -1, // vectoruint_get_u
  -1, // vectoruint_get_i
  -1, // vectoruint_get_d
  -1, // vectordouble_get_u
  -1, // vectordouble_get_i
  -1, // vectordouble_get_d
  -1, // abc_getpropns
  -1, // abc_getpropnsx
  -1, // abc_setprop
  -1, // abc_setpropx
  -1, // setpropertylate_u
  -1, // setpropertylate_i
  -1, // setpropertylate_d
  -1, // array_set_u
  -1, // array_set_i
  -1, // array_set_d
  -1, // vectorint_set_u
  -1, // vectorint_set_i
  -1, // vectorint_set_d
  -1, // vectoruint_set_u
  -1, // vectoruint_set_i
  -1, // vectoruint_set_d
  -1, // vectordouble_set_u
  -1, // vectordouble_set_i
  -1, // vectordouble_set_d
  -1, // abc_setpropns
  -1, // abc_setpropnsx
  -1, // abc_initprop
  -1, // abc_initpropx
  -1, // abc_initpropns
  -1, // abc_initpropnsx
};
}
